<!DOCTYPE html>
<head>
    <!--THIS LINK CONTAINS THE FONT FOR THE 'FAVORITE-STAR ICON' DONT DELETE-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<body>
    <!--This form contains the search bar.
        The text typed into it is passed to the post /search method when the button is clicked.-->
    <form action="/search" method="post">
        <label for="search-bar">Search</label>
        <!--This is the input text boxt. req.body.input is used in the axios call to the API-->
        <input id="search-bar" name="input" type="text">
        <button type="submit">Search</button>
    </form>

    <h3>Results</h3>
    <!--Down here is where, if any, the results of the search will show up
        An array of stock info is passed to the partial, which is then processed here
        putting each stock's symbol and company name into a card
        The symbol goes in the head, the name in the body
        There will also be a button at the right end of each card that will add that stock to the user's favorite list-->
    <div>
        <!--The code takes in a "searched_stock" object from the post method, then for each "result" in it, makes a card
        Each result has a ticker and name, which are used for the title and body of the card respectively-->
        {{#each searched_stock.results}}
        <div class="card">
            <div clas="card-body">
                <h5 class="card-title">
                    {{this.ticker}}
                </h5>
                <p class="card-text">
                    {{this.name}}
                </p>
                <!-- Favorite Button -->
                <button class="favorite-button" onclick="toggleFavorite(this, '{{this.ticker}}')">
                    <i class="{{#if this.isFavorited}}fas{{else}}far{{/if}} fa-star"></i> <!-- Star will hopefully reflect current state -->
                </button>
            </div>
        </div>
        {{/each}}
    </div>

    <script>
        function toggleFavorite(button, ticker) 
        {
            const icon = button.querySelector('i');
            const currentFavorite = icon.classList.contains('fas');

            fetch(`/favorite/${ticker}`, { method: currentFavorite ? 'DELETE' : 'POST' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update the icon based on the server
                    if (data.isFavorited) {
                        icon.classList.remove('far');
                        icon.classList.add('fas');
                    } else {
                        icon.classList.remove('fas');
                        icon.classList.add('far');
                    }
                } else {
                    console.error('Failed to update favorite status:', data.message);
                }
            })
            .catch(error => console.error('Error updating favorite:', error));
        }

    </script>

</body>
